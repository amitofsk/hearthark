"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _Skyflow_client, _Skyflow_metadata, _Skyflow_pureJsController;
Object.defineProperty(exports, "__esModule", { value: true });
const client_1 = __importDefault(require("./client"));
const logsHelper_1 = require("./utils/logsHelper");
const logs_1 = __importDefault(require("./utils/logs"));
const PureJsController_1 = __importDefault(require("./PureJsController"));
const common_1 = require("./utils/common");
const helpers_1 = require("./utils/helpers");
class Skyflow {
    constructor(config) {
        _Skyflow_client.set(this, void 0);
        _Skyflow_metadata.set(this, {});
        _Skyflow_pureJsController.set(this, void 0);
        __classPrivateFieldSet(this, _Skyflow_client, new client_1.default(Object.assign({}, config), __classPrivateFieldGet(this, _Skyflow_metadata, "f")), "f");
        __classPrivateFieldSet(this, _Skyflow_pureJsController, new PureJsController_1.default(__classPrivateFieldGet(this, _Skyflow_client, "f")), "f");
        (0, logsHelper_1.printLog)(logs_1.default.infoLogs.BEARER_TOKEN_LISTENER, common_1.MessageType.LOG);
    }
    static init(config) {
        (0, logsHelper_1.printLog)(logs_1.default.infoLogs.INITIALIZE_CLIENT, common_1.MessageType.LOG);
        config.vaultURL = (0, helpers_1.formatVaultURL)(config.vaultURL);
        const skyflow = new Skyflow(config);
        (0, logsHelper_1.printLog)(logs_1.default.infoLogs.CLIENT_INITIALIZED, common_1.MessageType.LOG);
        return skyflow;
    }
    insert(records, options = { tokens: true }) {
        (0, logsHelper_1.printLog)(logs_1.default.infoLogs.INSERT_TRIGGERED, common_1.MessageType.LOG);
        return __classPrivateFieldGet(this, _Skyflow_pureJsController, "f").insert(records, options);
    }
    detokenize(detokenizeInput) {
        (0, logsHelper_1.printLog)(logs_1.default.infoLogs.DETOKENIZE_TRIGGERED, common_1.MessageType.LOG);
        return __classPrivateFieldGet(this, _Skyflow_pureJsController, "f").detokenize(detokenizeInput);
    }
    getById(getByIdInput) {
        (0, logsHelper_1.printLog)(logs_1.default.infoLogs.GET_BY_ID_TRIGGERED, common_1.MessageType.LOG);
        return __classPrivateFieldGet(this, _Skyflow_pureJsController, "f").getById(getByIdInput);
    }
    invokeConnection(config) {
        (0, logsHelper_1.printLog)(logs_1.default.infoLogs.INVOKE_CONNECTION_TRIGGERED, common_1.MessageType.LOG);
        return __classPrivateFieldGet(this, _Skyflow_pureJsController, "f").invokeConnection(config);
    }
    static get RedactionType() {
        return common_1.RedactionType;
    }
    static get RequestMethod() {
        return common_1.RequestMethod;
    }
}
_Skyflow_client = new WeakMap(), _Skyflow_metadata = new WeakMap(), _Skyflow_pureJsController = new WeakMap();
exports.default = Skyflow;
//# sourceMappingURL=Skyflow.js.map